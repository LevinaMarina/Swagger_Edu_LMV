openapi: 3.0.3
info:
  title: API MANGO OFFICE
  description: |-
    API MANGO OFFICE позволяет внешним клиентским системам, подключенным через API коннектор, работать с Виртуальной АТС и Контакт-центром MANGO OFFICE.
    Не допускаются различия в поведении в зависимости от того каким образом было инициировано выполнение той или иной операции. В частности, внешняя система не может претендовать на расширение или уменьшение прав на действия в ВАТС и/или в КЦ, так как это определяется исключительно правами сотрудника ВАТС и/или в КЦ, с которым ВАТС и/или в КЦ ассоциирует выполняемые действия.
  version: Версия от 18.07.2023
servers:
  - url: https://app.mango-office.ru
  - url: http://api-enter-prerelease-ru.by.mgo.su
tags:
  - name: API Realtime
    description: Уведомления направляются от ВАТС к внешней системе
  - name: API Команды
    description: Набор запросов, которые внешняя система направляет API ВАТС
  - name: Правила переадресации
    description: Для работы со списком переадресации в ЛК ВАТС из внешней системы. Каждый из методов этой группы журналируется в ЛК
paths:
  /vpbx/events/call:
    post:
      tags:
        - API Realtime
      summary: "Уведомление о вызове"
      description: "Уведомление содержит информацию о вызове и его параметрах. Прохождение вызова через IVR, очередь вызовов, размещение на абонента сопровождаются рассылкой уведомления о новом вызове. Завершение пребывания в очереди IVR сопровождается рассылкой события о завершении соответствующего вызова."
      operationId: EventsCall
      requestBody:
        description: |
        
          Входные параметры:
      
          - **vpbx_api_key** - уникальный код продукта ВАТС;
        
          - **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          - **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:    
        
          1.  **entry_id** - _string_, внутренний идентификатор группы вызовов. Идентификатор назначается при поступлении вызова в ВАТС и не изменяется. Все последующие вызовы (переадресация, перевод средствами ВАТС), генерируемые в процессе обработки вызова, будут иметь одинаковое значения поля. Не имеет отношения к CALL-ID из SIP протокола. Строка не более 128 байт. Уникальность идентификатора гарантируется ВАТС на протяжении всего периода оказания услуг по данному API. Внутренний формат идентификатора не должен как-либо использоваться внешней системой. Реализация ВАТС может изменять принцип генерации идентификатора, не нарушая при этом соглашение об уникальности;
        
          2.  **call_id** - _string_, внутренний идентификатор вызова (плеча вызова), строка не более 128 байт. Не имеет отношения к CALL-ID из SIP протокола. Уникальность идентификатора вызова гарантируется ВАТС на протяжении всего периода оказания услуг по данному API. Внутренний формат идентификатора не должен как-либо использоваться внешней системой. Реализация ВАТС может изменять принцип генерации идентификатора вызова, не нарушая при этом соглашение об уникальности;
        
          3.  **timestamp** - время события UTC+3;
        
          4.  **seq** - счетчик последовательности уведомлений по вызову;
        
          5.  **call_state** - текущее состояние вызова;
        
          6.  **location** - текущее расположение вызова в ВАТС, возможные значения ivr (голосовое меню), queue (очередь дозвона на группу), abonent (сотрудник ВАТС);
        
          7.  **from** - данные, относящиеся к вызывающему абоненту
          
              - **extension** - идентификатор сотрудника ВАТС для вызывающего абонента. Опциональный параметр. Не передается в случае, если ВАТС не удалось идентифицировать вызывающего абонента как сотрудника ВАТС;
        
              -  **number** - номер вызывающего абонента (строка), в случае, если ВАТС удалось определить номер;
        
              - **taken_from_call_id** - идентификатор вызова, в котором участвовал вызывающий абонент, до того, как был переведен в текущий вызов;
        
              - **was_transferred** - булевый тип, true признак того, что данный абонент переведен на другого абонента командой перевод. Доступен с версии api v.2. По умолчанию false. Возможен только в состоянии Disconnected. Если признак в секции from, то данный вызов покинул вызываемый абонент. Если признак в секции to, то данный вызов покинул вызывающий абонент;
        
              - **hold_initiator** - тип булевый,  true признак того, что данный абонент поставил вызов (противоположного участника) на удержание. Доступен с версии api v.2. По умолчанию false. Возможен только в состоянии OnHold
        
        
          8.  **to** - данные, относящиеся к вызываемому абоненту, группе
        
              - **extension** - идентификатор сотрудника ВАТС для вызываемого абонента. Опциональный параметр. Не передается, если ВАТС не удалось идентифицировать вызываемого абонента как сотрудника ВАТС, у сотрудника ВАТС нет идентификатора (внутреннего номера), вызов еще не был распределен на сотрудника;
        
              - **number** - тип _string_, номер вызываемого абонента (строка);
        
              - **line_number** - входящая линия ВАТС, на которую поступил вызов;
        
              - **acd_group** - идентификатор группы операторов ВАТС (внутренний номер группы). Опциональный параметр. Передается в случае маршрутизации вызова через группу сотрудников ВАТС. Если группе не присвоен короткий номер, передается пустое значение;
        
              - **was_transferred** - тип булевый, true признак того, что данный абонент переведен на другого абонента командой перевод. Доступен с версии api v.2. По умолчанию false. Возможен только в состоянии Disconnected. Если признак в секции from, то данный вызов покинул вызываемый абонент. Если признак в секции to, то данный вызов покинул вызывающий абонент;
        
              - **hold_initiator** - тип булевый, true признак того, что данный абонент поставил вызов (противоположного участника) на удержание. Доступен с версии api v.2. По умолчанию false. Возможен только в состоянии OnHold;
        
        
          9.  **dct** - тип _string_, данные динамического коллтрекинга (строка не более 128 байт);
        
              -  **number** - тип _string_, номер коллтрекинга (динамический или статический);
        
              -  **type** -  _обязательный_ , тип данных числовой. Обязательный параметр. Тип номера, принимает следующие значения 0 - не относится к коллтрекингу; 1 - динамический номер; 2 - статический номер;
        
          10.  **disconnect_reason** - причина завершения вызова (см. ниже). Опциональный параметр. Передается в состоянии вызова Disconnected;
        
          11.  **transfer** - признак того, что вызов является следствием 'команды перевод'. Доступен с версии api v.2. Возможные значения;
        
                - **consultative** -  вызывающий абонент из taken_from_call_id выполняет консультативный перевод;
        
                - **blind** - вызывающий абонент был переведен из taken_from_call_id другим участником вызова taken_from_call_id, который покинул разговор;
        
                - **return_blind** возврат слепого перевода. При неответе адресата перевода (консультанта), клиент (переводимый абонент) перезванивает исходному оператору (инициатору перевода);
        
          **Примечание**. При слепом переводе из консультативного вызова (консультант ответил и оператор положил трубку), новый вызов не создается, а будет второе Connected событие с подменой звонящего абонента. При этом тип перевода меняется с consultative на blind.
        
        
          12.  **sip_call_id** - идентификатор входящего  звонка по SIP, сформированный внешней системой (Клиентом).
        
          **Примечание.** sip_call_id обеспечивает возможность сопоставить  входящий звонок  на Виртуальную АТС с информацией, хранимой во внешней системе (Клиенте). sip_call_id формируется внешней системой и сохраняется в Виртуальной АТС, только если в ЛК в разделе Дополнительные параметры API  включен флаг Разрешаю пробрасывать идентификатор входящего звонка
        
          13.  **command_id** - _string_,  идентификатор команды внешней системы, в результате которой появился вызов (строка не более 128 байт). Опциональный параметр. Уникальность строки для внешней системы гарантируется внешней системой;
        
          14.  **task_id** - опционально, идентификатор задачи исходящего обзвона, в результате которой появился вызов. Передается в случае, если звонок инициирован или ObDial, или CallbackWidget, или MissGroupСallCallback. В остальных случаях отсутствует;
        
          15.  **callback_initiator** - _string_  инициатор обратного звонка, в результате которого появился вызов (строка не более 128 байт). Передается, если звонок - callback. При обычном звонке отсутствует
        
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
                json:
                  $ref: '#/components/schemas/EventsCallReqBody'
      responses:
        '200':
          description: successful operation
  /vpbx/event/sms:
    post:
      tags:
          - API Realtime
      summary: "Уведомление о результатах отправки СМС"
      description: "Уведомление содержит информацию о статусе доставки смс конечному адресату"
      operationId: EventsSMS
      requestBody:
        description: |
        
          Входные параметры:
      
          - **vpbx_api_key** - уникальный код продукта ВАТС;
                
          - **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          - **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:
          
          1. **command_id** - _string_, идентификатор команды внешней системы, в результате которой появился вызов (строка не более 128 байт). Уникальность строки для внешней системы гарантируется внешней системой
          
          2. **timestamp** - время события UTC+3
          
          3. **reason** - результат отправки SMS,  см. [Список кодов результатов, коды 43хх](https://static.mango-office.ru/project-im/support/docs/API_MANGO_OFFICE_Code_of_result.pdf)
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
                json:
                  $ref: '#/components/schemas/EventsSmsBody'
      responses:
        '200':
          description: successful operation
  /vpbx/commands/callback:
    post:
      tags:
        - API Команды
      summary: "Инициирование вызова от имени сотрудника"
      description: "С помощью этого запроса внешняя система инициирует исходящий вызов. После получения вызываемого абонента, ВАТС попытается сопоставить его сотрудникам ВАТС, если это возможно, и присвоит им идентификатор абонента ВАТС. В ответ на команду высылается уведомление о результате обработки команды POST /vpbx/result/callback"
      operationId: СommandsCallback
      requestBody:
        description: |
        
          Входные параметры:
      
          * **vpbx_api_key** - уникальный код продукта ВАТС;
          
          * **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          * **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:
        
          1.  **command_id** - string, идентификатор команды (строка не более 128 байт). Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения и возможными последующими событиями, которые появляются в результате выполнения команды;
        
          2. **from** - _обязательный_, данные, относящиеся к вызывающему абоненту;
        
              * **extension** - _обязательный_, идентификатор сотрудника.  Если у сотрудника ВАТС нет идентификатора (внутреннего номера), выполнение команды от его имени невозможно;
        
              * **number** - string, необязательный, номер вызывающего абонента (строка не более 128 байт). Опциональный параметр. Поле следует использовать в случае, если вызов должен быть инициирован с номера, отличного от номера по умолчанию сотрудника ВАТС. В качестве значения можно указывать SIP, FMC и PSTN номера, но нельзя указывать внутренние номера и номера групп ВАТС. К номеру будут применены правила преобразования номеров ВАТС. Если будет указан номер, отличный от номеров сотрудника ВАТС, которому соответствует поле extension, на время вызова этот номер будет считаться номером сотрудника;
        
          3. **to_number** - _string_, номер вызываемого абонента (строка не более 128 байт). Может быть идентификатором сотрудника ВАТС, внутренним номером группы операторов ВАТС или любым другим номером. К номеру будут применены правила преобразования номеров ВАТС
        
          4.  **line_number** -  Линия, которая была использована для размещения вызова. Поле опциональное, если заполнено - ВАТС будет использовать указанную в этом параметре линию. Разрешается использовать только линии продукта, за счет которого будет происходить вызов. На данный момент поддерживаются следующие типы линий - SIP UAC, номера 7-800, DID номера манго. Важно! Чтобы вызов прошел через sip-линию, Вам  нужно указать имя  этой линии (а не SIP URI) в параметре line_number. Имя sip-линии задается в Личном кабинете MANGO OFFICE
        
          5.  **sip_headers** - опциональное поле, которое содержит список заголовков сип, которые могут быть переданы внешней системой в ВАТС.
          
              * **Call-Info/answer-after** - _string_, опциональное, строка не более 64 байт
        
        
          _Примечание_. Описание поля sip_headers приведено в Приложении 1. Допустимые заголовки для данного метода.
        

            
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
                json:
                  $ref: '#/components/schemas/CommandsCallback'
      responses:
        '200':
          description: |
            Команда выполнена успешно. Код ошибки:
            * '1000'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandsCallbackResponses'
        '400':
          description: |
            Команда не выполнена. Возможные ошибки:
            
              * '2xxx' - Команда запрещена биллинговой системой ВАТС 
            
              * '3100' - Переданы неверные параметры либо команда не может быть выполнена с этими параметрами
              
              * '4001 - Команда не поддерживается 
            
              * '5ххх' - Ошибка сервера        
                
  /vpbx/commands/callback_group:
    post:
      tags:
        - API Команды
      summary: "Инициирование вызова от имени группы"
      description: "Внешняя система инициирует исходящий вызов от имени группы"
      operationId: СommandsCallback_group
      requestBody:
        description: |
          Входные параметры:
      
          - **vpbx_api_key** - уникальный код продукта ВАТС;
                
          - **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          - **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:
        
          1.  **command_id** -  _string_, идентификатор команды (строка не более 128 байт). Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения и возможными последующими событиями, которые появляются в результате выполнения команды;
        
          2.  **from**, обязательный, данные, относящиеся к вызывающей стороне. Обязательный параметр. Может быть внешним номером, либо коротким номером группы; 
        
          3. **to**, обязательный, данные, относящиеся к вызываемой стороне. Обязательный параметр. Может быть внешним номером либо коротким номером группы. Короткий номер группы обязателен для заполнения либо в поле from либо в поле to; 
        
          4. **line_number** - обязательный, линия ВАТС, которая должна быть использована для размещения вызова. Обязательный параметр. Линия должна принадлежать тому же ВАТС, что и группа. Поддерживаются следующие типы линий SIP UAC, номера 7-800, DID-номера.
        
        
          **Важно!** Чтобы вызов прошел через sip-линию, Вам  нужно указать имя  этой линии (а не SIP URI) в параметре line_number. Имя sip-линии задается в Личном кабинете MANGO OFFICE.
        
                
          **Важно:**
        
          - если в поле from указан внешний номер, а в поле to указан номер группы, то ВАТС сначала совершает дозвон на внешний номер, а после ответа клиента – начинает дозвон на группу (по заданному в группе алгоритму);
        
          - если в поле from указан номер группы, а в поле to указан внешний номер, то ВАТС сначала совершает дозвон на группу (по заданному в группе алгоритму), а после ответа оператора – начинает дозвон на внешний номер.
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
                - from
                - to
                - line_number
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
                json:
                  $ref: '#/components/schemas/CommandsCallback_group'
                  
      responses:
        '200':
          description: |
            Команда выполнена успешно. Код ошибки:
              * '1000'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandsCallback_groupResponses'
        '4XX':
          description: |
            Команда не выполнена. Возможные ошибки:
            
              * '2xxx' - Команда запрещена биллинговой системой ВАТС 
            
              * '3100' - Переданы неверные параметры либо команда не может быть выполнена с этими параметрами
              
              * '4001' - Команда не поддерживается 
            
              * '5ххх' - Ошибка сервера

  /vpbx/commands/sms:
    post:
      tags:
        - API Команды
      summary: "Отправка SMS"
      description: "Команда инициирует отправку смс с текстом на адрес, указанный для отправки."
        
      operationId: Сommandssms
      
      requestBody:
        description: |
        
          Входные параметры:
      
          - **vpbx_api_key** - уникальный код продукта ВАТС;
        
          - **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          - **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:
      
          1. **command_id** -  тип string, идентификатор команды (строка не более 128 байт). Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения и возможными последующими событиями, которые появляются в результате выполнения команды;
        
          2. **text** - текст сообщения. Ограничение поля — 612 символов для латиницы и 268 для кириллицы (4 сегмента по 153 и 67 символов соответственно);
        
          3. **from_extension** - **обязательное**, идентификатор сотрудника. Обязательное поле. Если у сотрудника ВАТС нет идентификатора (внутреннего номера), выполнение команды от его имени невозможно. За счет данного абонента будет выполняться тарификация.  
          
            _Примечания_:  
        
            * если указан короткий номер сотрудника, будет отправлено на номер по умолчанию для данного сотрудника (первый номер в списке в настройках карточки сотрудника);
            * если указан не короткий номер сотрудника, то может быть, как sip-номером, так и ТфОП номером.
        
          4. **to_number** - номер вызываемого абонента (строка не более 128 байт). Может быть любым номером, кроме коротких номеров сотрудников АТС. К номеру будут применены правила преобразования номеров ВАТС
        
          5. **sms_sender** - имя отправителя SMS-сообщения. Поле опциональное (строка не более 128 байт), если заполнено - ВАТС будет использовать указанное в этом параметре имя отправителя. Если не заполнено или не допустимо - будет использоваться имя отправителя, выбранное.
        
        
          _Примечание_. Возможны следующие варианты использования:
        
            * если у клиента в ЛК доступно к выбору только имя по умолчанию, допускается в данном поле передать только имя по умолчанию;
            * если у клиента в ЛК доступно к выбору имя по умолчанию либо отраслевое, допускается в данном поле передать имя по умолчанию либо любое доступное отраслевое имя; 
            * если у клиента в ЛК доступно к выбору имя по умолчанию, либо отраслевое имя, либо подтвержденное уникальное имя, то допускается в данном поле передать имя по умолчанию либо любое доступное отраслевое имя, либо уникальное имя.
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
                - from_extension
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
                json:
                  $ref: '#/components/schemas/Commandssms'
                  
      responses:
        '200':
          description: |
            Команда выполнена успешно. Код ошибки:
              * '1000'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandssmsResponses'
        '4XX':
          description: |
            Команда не выполнена. Возможные ошибки:
            
              * '2xxx' - Команда запрещена биллинговой системой ВАТС 
            
              * '3100' - Переданы неверные параметры либо команда не может быть выполнена с этими параметрами
              
              * '4300' - SMS сообщение отправить не удалось 
            
              * '5ххх' - Ошибка сервера

  /vpbx/commands/recording/start:
    post:
      tags:
        - API Команды
      summary: "Включение записи разговора"
      description: "Команда инициирует включение записи разговора средствами ВАТС. По логике ВАТС записывать можно только разговоры, где участвую сотрудники, созданные Виртуальной АТС. Результатом выполнения команды является уведомление о результате обработки. Запись может начаться не сразу (не все состояния вызова предполагают такую возможность), в момент фактического начала записи будет отправлено уведомление о начале записи"
      operationId: СommandRecordingStart
      requestBody:
        description: |
          Входные параметры:
      
          - **vpbx_api_key** - уникальный код продукта ВАТС;        
        
          - **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          - **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:

          1.  **command_id** -  _string_, идентификатор команды (строка не более 128 байт). Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения и возможными последующими событиями, которые появляются в результате выполнения команды;
        
          2. **call_id** - _string_, внутренний идентификатор вызова, строка. Не имеет отношения к CALL-ID из SIP протокола. В случае перевода вызова, call id может меняться, если записываемый абонент сменил собеседника (см. далее диаграмму переходов для состояния процесса записи разговора);
        
          3. **call_party_number** - _string_, номер абонента (строка не более 128 байт), участвующего в вызове, которого нужно начать записывать. Может быть только идентификатором сотрудника ВАТС (предпочтительно) или одним из номеров сотрудника ВАТС, который указан в настройках ВАТС. К номеру будут применены правила преобразования номеров ВАТС. Если ВАТС не сможет идентифицировать сотрудника ВАТС по номеру, результат выполнения команды будет равен 3330 (Номер не найден у ВАТС или сотрудника)"
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
                - call_id
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
                json:
                  $ref: '#/components/schemas/CommandRecordingStart'

      responses:
        '200':
          description: |
            Команда выполнена успешно. Код ошибки:
              * '1000'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandRecordingResponses'
        '4XX':
          description: |
            Команда не выполнена. Возможные ошибки:
            
              * '22хх' - Запись разговора запрещена биллинговой системой 
              * '333x' - Не найден номер абонента, участвующего в вызове, которого нужно начать записывать
              * '4001' - Команда не поддерживается 
              * '41хх' - Выполнить команду по логике работы ВАТС невозможно 
              * '5ххх' - Ошибка сервера
                
  /vpbx/commands/play/start:
     post:
      tags:
        - API Команды
      summary: "Включение воспроизведения звукового файла"
      description: |
      
        Команда инициирует включение проигрывания звукового файла абоненту средствами ВАТС. По логике ВАТС включить проигрывание можно только когда абонент находится в IVR-меню, в терминах событий о звонках это location:ivr или location:queue (например пункт меню или пункт DISA или состояние очереди на группу).
      
      
        Обработка команды возможна, когда система находится в процессе проигрывания звукового фрагмента либо ожидания ввода пользователя (далее - рабочие окна). Если команда play пришла в переходные моменты между пунктами и действиями, либо находится в любом другом ожидающем процессе (например запись голосовой почты, отправка факса), то обработка команды будет завершена с ошибкой.
      
      
        В текущем виде проигрывание файла возможно только для входящего звонка, поступившего на линию (Номер DID либо SIP URI) ВАТС клиента. Результатом выполнения команды является код ошибки.
      
      
        При получении команды на проигрывание от внешней системы ВАТС прервет все текущие проигрывания звуковых файлов. Во время проигрывания файла абоненту система может принимать и обрабатывать прочие разрешенные команды для location:ivr (например Маршрутизация вызова, Завершение вызова, Включение проигрывания звукового файла), а также абонент может использовать средства управления разговором, например ввод DTMF-команд.
      
      
        Если за время проигрывания не было получено никаких команд со стороны внешней системы и абонент не использовал средства управления разговором,то ВАТС по окончании проигрывания файла и заданной задержки продолжит обработку по схеме IVR.
      
      
        Требования к звуковому файлу:
      
          - Формат: mp3
      
          - До 256 кбит/сек
      
          - Размер до 20 Мб
      operationId: СommandPlayStart
      requestBody:
        description: |
          Входные параметры:
      
          - **vpbx_api_key** - уникальный код продукта ВАТС;        
        
          - **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          - **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:
        
          1.  **command_id** - _string_, идентификатор команды. Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения
            
          2.  **call_id** - _string_, обязательный, идентификатор команды. Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения
            
          3. **after_play_time**, ID аудиофайла в облачном хранище из продукта клиента. Может быть получен из результата Запрос на получение информации о «мелодиях/звуковых сообщениях»
          
          4. **internal_id**, число, опционально
        
        
          **Важно.** Поле internal_id обязательно для заполнения. Если этополе будет пустым - будет просто задержка в размере after_play_time
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
                - command_id
                - call_id
                - internal_id
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
                json:
                  $ref: '#/components/schemas/CommandPlayStart'
      responses:
        '200':
          description: |
            Команда выполнена успешно. Код ошибки:
              * '1000'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandPlayStartResponses'
        '4XX':
          description: |
            Команда не выполнена. Возможные ошибки:
            
              * '22хх' - Запись разговора запрещена биллинговой системой 
              * '333x' - Не найден номер абонента, участвующего в вызове, которого нужно начать записывать
              * '4001' - Команда не поддерживается 
              * '41хх' - Выполнить команду по логике работы ВАТС невозможно 
              * '5ххх' - Ошибка сервера          
                
                
                
  /vpbx/result/callback:
    post:
      tags:
        - API Команды
      summary: "Уведомление о результате обработки команды наинициирование вызова от имени сотрудника"
      description: "Уведомление о результате обработки команды передается к внешеней системе в ответ на команду /vpbx/commands/callback"
      responses:
        '200':
          description: successful operation
  /vpbx/forwarding/numbers/:
    post:
      tags:
        - Правила переадресации
      summary: "Получить список правил переадресации"
      description: "Метод позволяет получить список номеров переадресации с их настройками в ЛК. 
        Содержит информацию о внешнем номере клиента, номере переадресации, типах этих номеров (Телефон или SIP), идентификаторе правила переадресации. 
        При переадресации на внешние номера возвращается значение времени ожидания ответа абонента (в секундах). 
        Опционально также могут быть указаны маски номеров и комментарии. Маски настраиваются внутри ЛК"
      operationId: forwarding_numbers
      requestBody:
        description: |
          Входные параметры:
      
          - **vpbx_api_key** - уникальный код продукта ВАТС;
                
          - **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          - **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:

          1.  **limit** - _integer_, необязательный, количество переадресаций в ответе (максимальное значение - 1000), значение по умолчанию – 1000

          2.  **offset** - _integer_,  необязательный, смещение начала выборки, значение по умолчанию - 0
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
      
      responses:
        '200':
          description: |
            Команда выполнена успешно. Код ошибки:
              * '1000'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forwarding_numbersResponses'
        '4XX':
          description: |
            Команда не выполнена. Возможные ошибки:
            
              * '3300' - Объект не существует
              * '5XXX' - Исключение
          

  /vpbx/forwarding/number/add:
    post:
      tags:
        - Правила переадресации
      summary: "Добавление нового правила переадресации"
      description: "Метод позволяет добавить новое правило безусловной переадресации на внутренний или внешний номер при звонке клиента. 
        При добавлении новой переадресации для имеющегося в списке номера клиента - возвращается ошибка, новое правило не добавляется. 
        Опционально может содержать ID номера ВАТС (если переадресация осуществляется на него) и комментарий"
      requestBody:
        description: |
          Входные параметры:
      
          - **vpbx_api_key** - уникальный код продукта ВАТС;        
        
          - **sign** - расчитывается по формуле, указанной выше, либо [SHA256 генератором MANGO OFFICE](https://www.mango-office.ru/support/integratsiya-api/dopolnitelnye_prilozheniya/sha256_generator/)
        
          - **json** - поле можно рассматривать как ассоциативный массив, в состав которого входят описанные ниже параметры. 
        
      
          Поле json включает в себя:
          
          1. **client_phone_number** - _string_, _обязательный_, номер, с которого поступает входящий звонок; указанный номер должен соответствовать типу номера, указанного в client_phone_type (если client_phone_type = 0, тогда client_phone_number - DID-номер; если client_phone_type = 1, тогда client_phone_number - SIP-номер), иначе метод возвращает ошибку
          
          2. **client_phone_type** - тип _bool_, _обязательный_, тип номера, с которого поступает входящий звонок (0 - телефон, 1 - SIP-Номер)
          
          3. **status** - тип _bool_, _обязательный_, статус активности правила переадресации (0 - правило неактивно, 1 - правило активно)

          4. **forward_type** - тип _string_, _обязательный_, тип переадресации (group - группа, user - сотрудник, ext_forward - внешний номер)

          5. **forward_to_group** - _object_, _обязательный_, если в параметре forward_type указано значение group (иначе опциональный), данные при переадресации на группу:
          
              * **forward_group_id** - _integer_, _обязательный_, если указан параметр forward_to_group (иначе опциональный), ID сотрудника, на которого осуществляется переадресация
            
          6. **forward_to_user** - _object_, _обязательный_, если в параметре forward_type указано значение user (иначе опциональный), данные при переадресации на сотрудника, массив

              * **forward_user_id** - _integer_, _обязательный_, если указан параметр forward_to_user (иначе опциональный), ID сотрудника, на которого осуществляется переадресация

              * **forward_contact_id** - _string_, _обязательный_, если указан параметр forward_to_user (иначе опциональный), id контакта сотрудника, на который осуществляется переадресация, если передана пустая строка, то устанавливается номер по-умолчанию

          7.  **forward_to_ext** - _object_, _обязательный_, если в параметре forward_type указано значение ext_forward (иначе опциональный), массив данных при переадресации на внешний номер

              * **forward_number_type** - _bool_, _обязательный_, если указан параметр forward_to_ext (иначе опциональный), тип внешнего номера, на который осуществляется переадресация вызова (0 - телефон, 1 - SIP-Номер) 

              * **forward_number** - _string_, _обязательный_, если указан параметр forward_to_ext (иначе опциональный), внешний номер, на который осуществляется переадресация вызова
            
              * **forward_wait_sec** - _integer_, _обязательный_, если указан параметр forward_to_ext (иначе опциональный), время ожидания ответа абонента (в секундах) при переадресации на внешний номер
          
          8.  **comment** - _string_, комментарий."
        content:
          application/json:
            schema:
              required:
                - vpbx_api_key
                - sign
              type: object
              properties:
                vpbx_api_key:
                  type: string
                  example: "1234567890qwerty"
                  description: "Уникальный код вашей ВАТС. Это обязательный элемент запроса, по которогому ВАТС определяет внешнюю систему, от корой отправлен запрос"
                sign:
                  type: string
                  example: "1234567890qwerty"
                  description: "sign рассчитывается по формуле"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
  /pet:
    put:
      tags:
        - Правила переадресации
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
        
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /pet/findByStatus:
    get:
      tags:
        - Правила переадресации
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: available
            enum:
              - available
              - pending
              - sold
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /pet/findByTags:
    get:
      tags:
        - Правила переадресации
      summary: Finds Pets by tags
      description: Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      operationId: findPetsByTags
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /pet/{petId}:
    get:
      tags:
        - Правила переадресации
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pets
    post:
      tags:
        - Правила переадресации
      summary: Updates a pet in the store with form data
      description: ''
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of pet that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of pet that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - Правила переадресации
      summary: Deletes a pet
      description: delete a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /pet/{petId}/uploadImage:
    post:
      tags:
        - Правила переадресации
      summary: uploads an image
      description: ''
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: integer
            format: int64
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /store/inventory:
    get:
      tags:
        - Правила переадресации
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
      security:
        - api_key: []
  /store/order:
    post:
      tags:
        - Правила переадресации
      summary: Place an order for a pet
      description: Place a new order in the store
      operationId: placeOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Invalid input
  /store/order/{orderId}:
    get:
      tags:
        - Правила переадресации
      summary: Find purchase order by ID
      description: For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
        - Правила переадресации
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /user:
    post:
      tags:
        - Правила переадресации
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
  /user/createWithList:
    post:
      tags:
        - Правила переадресации
      summary: Creates list of users with given input array
      description: Creates list of users with given input array
      operationId: createUsersWithListInput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: successful operation
  /user/login:
    get:
      tags:
        - Правила переадресации
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - Правила переадресации
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{username}:
    get:
      tags:
        - Правила переадресации
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - Правила переадресации
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - Правила переадресации
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
components:
  schemas:
  
    EventsCallReqBody:
      type: object
      properties:
        entry_id:
          type: string
          example: "1MN0Q1MDOQ="
          description: "Внутренний идентификатор группы вызовов. Идентификатор назначается при поступлении вызова в ВАТС и не изменяется. Все последующие вызовы (переадресация, перевод средствами ВАТС), генерируемые в процессе обработки вызова, будут иметь одинаковое значения поля. Не имеет отношения к CALL-ID из SIP протокола. Строка не более 128 байт. Уникальность идентификатора гарантируется ВАТС на протяжении всего периода оказания услуг по данному API. Внутренний формат идентификатора не должен как-либо использоваться внешней системой. Реализация ВАТС может изменять принцип генерации идентификатора, не нарушая при этом соглашение об уникальности"
        call_id:
          type: string
          example: "MIxEyNTzTo6NDxkzNMMOzNQ="
          description: "Внутренний идентификатор вызова (плеча вызова), строка не более 128 байт. Не имеет отношения к CALL-ID из SIP протокола. Уникальность идентификатора вызова гарантируется ВАТС на протяжении всего периода оказания услуг по данному API. Внутренний формат идентификатора не должен как-либо использоваться внешней системой. Реализация ВАТС может изменять принцип генерации идентификатора вызова, не нарушая при этом соглашение об уникальности"
        timestamp:
          type: string
          format: date-time
          example: "1558422128"
          description: Время события UTC+3
        seq:
          type: string
          example: 1
          description: "Счетчик последовательности уведомлений по вызову. Получение события о состоянии вызова внешней системой может происходить в последовательности, отличной от той, в которой они происходили в ВАТС (подробнее о счетчике). Это связанно с тем, что уведомления могут отправляться параллельно, без ожидания ответа на каждый запрос. При обработке событий их необходимо упорядочивать, либо просто игнорировать новое событие с меньшим значением seq."
        call_state:
          type: string
          example: "Disconnected"
          description: "Текущее состояние вызова"
        location:
          type: string
          example: ivr
          description: "Текущее расположение вызова. Где ivr - голосовое меню,  queue - очередь дозвона на группу, abonent - сотрудник ВАТС"
          enum:
            - ivr
            - queue
            - abonent
        from:
          $ref: '#/components/schemas/EventsCallReqBodyFrom'
        to:
          $ref: '#/components/schemas/EventsCallReqBodyTo'
        dct:
          $ref: '#/components/schemas/EventsCallReqBodyDct'  
        disconnect_reason:
          type: string
          example: "1131"
          description: "Причина завершения вызова (см. ниже). Опциональный параметр. Передается в состоянии вызова Disconnected"
        transfer:
          $ref: '#/components/schemas/EventsCallReqBodyTransfer'
        sip_call_id:
          type: string
          example: "7"
          description: "Идентификатор входящего  звонка по SIP, сформированный внешней системой (Клиентом)"
        command_id:
          type: string
          example: "7"
          description: "Идентификатор команды внешней системы, в результате которой появился вызов (строка не более 128 байт). Опциональный параметр. Уникальность строки для внешней системы гарантируется внешней системой"
        task_id:
          type: string
          example: "7"
          description: "Опционально, идентификатор задачи исходящего обзвона, в результате которой появился вызов. Передается в случае, если звонок инициирован или ObDial, или CallbackWidget, или MissGroupСallCallback. В остальных случаях отсутствует"
        callback_initiator:
          type: string
          example: "7"
          description: "Опционально, инициатор обратного звонка, в результате которого появился вызов (строка не более 128 байт). Передается, если звонок - callback. При обычном звонке отсутствует."
    EventsCallReqBodyFrom:
      type: object
      description: "Данные, относящиеся к вызывающему абоненту"
      properties:
        extension:
          type: string
          example: "7"
          description: "Идентификатор сотрудника ВАТС для вызывающего абонента. Опциональный параметр. Не передается в случае, если ВАТС не удалось идентифицировать вызывающего абонента как сотрудника ВАТС"
        number:
          type: string
          example: "79001234567"
          description: "Номер вызывающего абонента (строка), в случае, если ВАТС удалось определить номер. Опциональный параметр"
        taken_from_call_id:
          type: string
          example: "oMNTMyzTzNTo6NxNkDIxOxM3EMNTj"
          description: "Идентификатор вызова, в котором участвовал вызывающий абонент, до того, как был переведен в текущий вызов. Опциональный параметр"
        was_transferred:
          type: boolean
          example: false
          description: "true - признак того, что данный абонент переведен на другого абонента 'командой перевод'. Доступен с версии api v.2. По умолчанию false. Возможен только в состоянии Disconnected. Если признак в секции from, то данный вызов покинул вызываемый абонент. Если признак в секции to, то данный вызов покинул вызывающий абонент"
        hold_initiator:
          type: boolean
          example: true
          description: "true признак того, что данный абонент поставил вызов (противоположного участника) на удержание. Доступен с версии api v.2. По умолчанию false. Возможен только в состоянии OnHold"
    EventsCallReqBodyTo:
        type: object
        properties:
          extension:
            type: string
            example: "29"
            description: "идентификатор сотрудника ВАТС для вызываемого абонента. Опциональный параметр. Не передается, если ВАТС не удалось идентифицировать вызываемого абонента как сотрудника ВАТС, у сотрудника ВАТС нет идентификатора (внутреннего номера), вызов еще не был распределен на сотрудника"
          number:
            type: string
            example: "sip:user00000@tech.mangosip.ru"
            description: "номер вызываемого абонента (строка)"
          line_number:
            type: string
            example: "sip:line00000@tech.mangosip.ru"
            description: "входящая линия ВАТС, на которую поступил вызов. Опциональный параметр"
          acd_group:
            type: string
            example: "303"
            description: "идентификатор группы операторов ВАТС (внутренний номер группы). Опциональный параметр. Передается в случае маршрутизации вызова через группу сотрудников ВАТС. Если группе не присвоен короткий номер, передается пустое значение"
          was_transferred:
            type: boolean
            example: true
            description: true признак того, что данный абонент переведен на другого абонента 'командой перевод'. Доступен с версии api v.2. По умолчанию false. Возможен только в состоянии "Disconnected". Если признак в секции from, то данный вызов покинул вызываемый абонент. Если признак в секции to, то данный вызов покинул вызывающий абонент
          hold_initiator:
            type: boolean
            example: true
            description: true признак того, что данный абонент поставил вызов (противоположного участника) на удержание. Доступен с версии api v.2. По умолчанию false. Возможен только в состоянии OnHold
    EventsCallReqBodyDct:
        type: object
        properties:
          number:
            type: string
            example: "7"
            description: тип данных строковый, номер коллтрекинга (динамический или статический). Опциональный параметр
          type:
            type: integer
            description: тип данных числовой. Обязательный параметр. Где, 0 - не относится к коллтрекингу, 1 - динамический номер, 2 - статический номер
            example: 1
            enum:
              - 0
              - 1
              - 2
    EventsCallReqBodyTransfer:
        type: object
        properties:
          consultative:
            type: string
            example: "7"
            description: вызывающий абонент из taken_from_call_id выполняет консультативный перевод
          blind:
            type: string
            example: "7"
            description: вызывающий абонент был переведен из taken_from_call_id другим участником вызова taken_from_call_id, который покинул разговор
          return_blind:
            type: string
            example: "7"
            description: возврат слепого перевода. При неответе адресата перевода (консультанта), клиент (переводимый абонент) перезванивает исходному оператору (инициатору перевода). При слепом переводе из консультативного вызова (консультант ответил и оператор положил трубку), новый вызов не создается, а будет второе "Connected" событие с подменой звонящего абонента. При этом тип перевода меняется с consultative на blind
    EventsSmsBody:
      type: object
      properties:
        command_id:
          type: string
          example: "1sjdhjh1231"
          description: Идентификатор команды внешней системы, в результате которой появился вызов (строка не более 128 байт). Уникальность строки для внешней системы гарантируется внешней системой
        timestamp:
          type: string
          format: date-time
          example: "1399906980"
          description: время события UTC+3
        reason:
          type: string
          example: "1000"
          description: результат отправки SMS (см. "Список кодов результатов", коды 43хх)
    CommandsCallback:
      type: object
      properties:
        command_id:
          type: string
          example: "cbk1"
          description: "Идентификатор команды внешней системы, в результате которой появился вызов (строка не более 128 байт). Уникальность строки для внешней системы гарантируется внешней системой"
        from:
          $ref: '#/components/schemas/CommandsCallbackFrom'  
        to_number:
          type: string
          example: "cbk1"
          description: "Номер вызываемого абонента (строка не более 128 байт). Может быть идентификатором сотрудника ВАТС, внутренним номером группы операторов ВАТС или любым другим номером. К номеру будут применены правила преобразования номеров ВАТС"
        line_number:
          type: string
          example: "cbk24455"
          description: "Линия, которая была использована для размещения вызова. Поле опциональное, если заполнено - ВАТС будет использовать указанную в этом параметре линию. Разрешается использовать только линии продукта, за счет которого будет происходить вызов. На данный момент поддерживаются следующие типы линий - SIP UAC, номера 7-800, DID номера манго. Важно! Чтобы вызов прошел через sip-линию, Вам  нужно указать имя  этой линии (а не SIP URI) в параметре line_number. Имя sip-линии задается в Личном кабинете MANGO OFFICE."
        sip_headers:
          $ref: '#/components/schemas/CommandsCallback_sip_headers'
    CommandsCallback_sip_headers:
      type: object
      description: "Опциональное поле, которое содержит список заголовков сип, которые могут быть переданы внешней системой в ВАТС"
      properties:
        Call-Info/answer-after:
          type: string
          example: "cbk1"
          description: "Опциональное, строка не более 64 байт"
    CommandsCallbackFrom:
      type: object
      properties:  
        extension:
          type: string
          example: "7"
          description: Идентификатор сотрудника ВАТС для вызывающего абонента. Опциональный параметр. Не передается в случае, если ВАТС не удалось идентифицировать вызывающего абонента как сотрудника ВАТС
        number:
          type: string
          example: "79001234567"
          description: Номер вызывающего абонента (строка), в случае, если ВАТС удалось определить номер. Опциональный параметр      
    CommandsCallbackResponses:
      type: object
      properties:
        command_id:
          type: string
          example: "cbk1"
          description: "Идентификатор команды внешней системы, в результате которой появился вызов (строка не более 128 байт). Уникальность строки для внешней системы гарантируется внешней системой"
        from:
          $ref: '#/components/schemas/CommandsCallbackFrom'  
        to_number:
          type: string
          example: "cbk1"
          description: "номер вызываемого абонента (строка не более 128 байт). Может быть идентификатором сотрудника ВАТС, внутренним номером группы операторов ВАТС или любым другим номером. К номеру будут применены правила преобразования номеров ВАТС"
    CommandsCallback_group:
      type: object
      properties:
        command_id:
          type: string
          example: "cbk1"
          description: "Идентификатор команды (строка не более 128 байт). Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения и возможными последующими событиями, которые появляются в результате выполнения команды"
        from:
          type: string
          example: "1234"
          description: "Данные, относящиеся к вызывающей стороне. Обязательный параметр. Может быть внешним номером либо коротким номером группы. Если в поле from указан внешний номер, а в поле to указан номер группы, то ВАТС сначала совершает дозвон на внешний номер, а после ответа клиента – начинает дозвон на группу (по заданному в группе алгоритму). Если в поле from указан номер группы, а в поле to указан внешний номер, то ВАТС сначала совершает дозвон на группу (по заданному в группе алгоритму), а после ответа оператора – начинает дозвон на внешний номер."  
        to:
          type: string
          example: "9991234567"
          description: "Данные, относящиеся к вызываемой стороне. Обязательный параметр. Может быть внешним номером либо коротким номером группы. Короткий номер группы обязателен для заполнения либо в поле from либо в поле to"
        line_number:
          type: string
          example: "4951234567"
          description: "Линия ВАТС, которая должна быть использована для размещения вызова. Обязательный параметр. Линия должна принадлежать тому же ВАТС, что и группа. Поддерживаются следующие типы линий: SIP UAC, номера 7-800, DID-номера. Важно! Чтобы вызов прошел через sip-линию, Вам  нужно указать имя  этой линии (а не SIP URI) в параметре line_number. Имя sip-линии задается в Личном кабинете MANGO OFFICE."
    CommandsCallback_groupResponses:      
      type: object
      properties:
        command_id:
          type: string
          example: "cbk1"
          description: "Идентификатор команды (строка не более 128 байт)"
        result:
          type: string
          example: "1000"
          description: "Результат выполнения команды инициирования вызова от внешней системы. Возможные значения результата: 1000 - команда выполнена успешно, 2xxx - команда запрещена биллинговой системой ВАТС, 3100 - переданы неверные параметры либо команда не может быть выполнена с этими параметрами, 4300 - SMS сообщение отправить не удалось, 5ххх - ошибка сервера"
          enum:
            - '1000' 
            - '2xxx'
            - '3100'
            - '4300'
            - '5xxx'
    Commandssms:
      type: object

      properties:
          command_id:
            type: string
            example: "cbk1"
            description: "Идентификатор команды (строка не более 128 байт). Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения и возможными последующими событиями, которые появляются в результате выполнения команды"
          text:
            type: string
            example: "Hello world!"
            description: "Текст сообщения. Ограничение поля — 612 символов для латиницы и 268 для кириллицы (4 сегмента по 153 и 67 символов соответственно)"
          from_extension:
            type: integer
            example: 18
            description: "Идентификатор сотрудника. Обязательное поле. Если у сотрудника ВАТС нет идентификатора (внутреннего номера), выполнение команды от его имени невозможно. За счет данного абонента будет выполняться тарификация. Примечания: 1) если указан короткий номер сотрудника, будет отправлено на номер по умолчанию для данного сотрудника (первый номер в списке в настройках карточки сотрудника); 2) если указан не короткий номер сотрудника, то может быть как sip-номером, так и ТфОП номером"
          to_number:
            type: string
            example: "79991234567"
            description: "Номер вызываемого абонента (строка не более 128 байт). Может быть любым номером, кроме коротких номеров сотрудников АТС. К номеру будут применены правила преобразования номеров ВАТС"
          sms_sender:
            type: string
            example: "Operator 007"
            description: "Имя отправителя SMS-сообщения. Поле опциональное (строка не более 128 байт), если заполнено - ВАТС будет использовать указанное в этом параметре имя отправителя. Если не заполнено или не допустимо - будет использоваться имя отправителя, выбранное в ЛК. Примечание. Возможны следующие варианты использования: 1) если у клиента в ЛК доступно к выбору только имя по умолчанию, допускается в данном поле передать только имя по умолчанию; 2) если у клиента в ЛК доступно к выбору имя по умолчанию либо отраслевое, допускается в данном поле передать имя по умолчанию либо любое доступное отраслевое имя; 3) если у клиента в ЛК доступно к выбору имя по умолчанию, либо отраслевое имя, либо подтвержденное уникальное имя, то допускается в данном поле передать имя по умолчанию либо любое доступное отраслевое имя либо уникальное имя."
    CommandssmsResponses:
      type: object
      properties:
        command_id:
          type: string
          example: "cbk1"
          description: "Идентификатор команды (строка не более 128 байт)"
        result:
          type: string
          example: "1000"
          description: "Результат выполнения команды инициирования вызова от внешней системы. Возможные значения результата: 1000 - команда выполнена успешно, 2xxx - команда запрещена биллинговой системой ВАТС, 3100 - переданы неверные параметры либо команда не может быть выполнена с этими параметрами, 4001 - команда не поддерживается, 5ххх - ошибка сервера"
          enum:
            - '1000' 
            - '2xxx'
            - '3100'
            - '4001'
            - '5xxx'
    CommandRecordingStart:
      type: object
      properties:
          command_id:
            type: string
            example: "cbk1"
            description: "Идентификатор команды (строка не более 128 байт). Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения и возможными последующими событиями, которые появляются в результате выполнения команды"
          call_id:
            type: string
            description: "Внутренний идентификатор вызова, строка. Не имеет отношения к CALL-ID из SIP протокола. В случае перевода вызова, call id может меняться, если записываемый абонент сменил собеседника (см. далее диаграмму переходов для состояния процесса записи разговора)"
          call_party_number:
            type: string
            example: "18"
            description: "Номер абонента (строка не более 128 байт), участвующего в вызове, которого нужно начать записывать. Может быть только идентификатором сотрудника ВАТС (предпочтительно) или одним из номеров сотрудника ВАТС, который указан в настройках ВАТС. К номеру будут применены правила преобразования номеров ВАТС. Если ВАТС не сможет идентифицировать сотрудника ВАТС по номеру, результат выполнения команды будет равен 3330 (Номер не найден у ВАТС или сотрудника)"
    CommandRecordingResponses:
      type: object
      properties:
        command_id:
          type: string
          example: "cbk1"
          description: "Идентификатор команды (строка не более 128 байт)"
        result:
          type: string
          example: "1000"
          description: "Результат выполнения команды инициирования вызова от внешней системы. Возможные значения результата: 1000 - команда выполнена успешно, 22xx - Запись разговора запрещена биллинговой системой, 333х - Не найден номер абонента, участвующего в вызове, которого нужно начать записывать, 4001 - команда не поддерживается, 41хх - Выполнить команду по логике работы ВАТС невозможно,  5ххх - ошибка сервера"
          enum:
            - '1000' 
            - '22xx'
            - '333х'
            - '4001'
            - '41хх'
            - '5xxx'      
    CommandPlayStart:
      type: object
      properties:
          command_id:
            type: string
            example: "cbk1"
            description: "Cтрока, обязательно, не более 128 байт. Идентификатор команды. Формируется внешней системой. ВАТС никак не обрабатывает этот идентификатор, не анализирует и не полагается на уникальность его значения. Идентификатор можно использовать для связи команды с результатом ее выполнения"
          call_id:
            type: string
            description: "Cтрока, обязательно, не более 128 байт . Идентификатор вызова"
          after_play_time:
            type: integer
            example: 5
            description: "Дополнительное время в секундах, которое будет ожидать ВАТС после окончания проигрывания и до продолжения обработки звонка. Может быть полезна как задержка для ввода DTMF"
          internal_id:
            type: integer
            example: 5
            description: "Число, опционально. ID аудиофайла в облачном хранище из продукта клиента. Может быть получен из результата Запрос на получение информации о «мелодиях/звуковых сообщениях». Важно. Поле internal_id обязательно для заполнения. Если этополе будет пустым - будет просто задержка в размере after_play_time"
    CommandPlayStartResponses:
      type: object
      properties:
        command_id:
          type: string
          example: "cbk1"
          description: "Идентификатор команды (строка не более 128 байт)"
        result:
          type: string
          example: "1000"
          description: "Результат выполнения команды инициирования вызова от внешней системы. Возможные значения результата: 1000 - команда выполнена успешно, 333х - Не найден номер абонента, участвующего в вызове, которого нужно начать записывать, 4001 - команда не поддерживается, 41хх - Выполнить команду по логике работы ВАТС невозможно,  5ххх - ошибка сервера"
          enum:
            - '1000' 
            - '333х'
            - '4001'
            - '41хх'
            - '5xxx'       
          
    
    
    forwarding_numbersResponses:
      required:
        - data
        - result
      type: object
      properties:
        result:
          type: string
          example: "1000"
          description: "Результат выполнения команды инициирования вызова от внешней системы. Возможные значения результата: 1000 - команда выполнена успешно, 3300 - объект не существует, 5ххх - исключение"
          enum:
            - '1000' 
            - '3300'
            - '5xxx'
        data:
          $ref: '#/components/schemas/forwarding_numbersResponses_data'
    forwarding_numbersResponses_data:
      type: object
      properties:
        numbers:
          $ref: '#/components/schemas/forwarding_numbersResponses_data_numbers'
    forwarding_numbersResponses_data_numbers:  
      type: object
      format: array
      properties:
        forward_id:
          type: integer
          example: '10023131'
          description: "ID правила переадресации"
        client_phone_number:
          type: string
          example: "79993692503"
          description: "Номер, с которого поступает входящий звонок"
        client_phone_type:
          type: boolean
          example: "0"
          description: "Тип номера, с которого поступает входящий звонок: 0 - телефон, 1 - SIP-Номер"
        
        status:
          type: boolean
          example: 0
          description: "Статус активности правила переадресации: 0 - правило неактивно,1 - правило активно"
        comment:
          type: string
          example: "Комментарий"
          description: "Комментарий"
        forward_type:
          type: string
          example: "ext_forward"
          description: "Тип переадресации. Возможные значения: group - группа, user - сотрудник, ext_forward - внешний номер"
          enum:
            - group
            - approved
            - ext_forward
        forward_to_group:
           $ref: '#/components/schemas/forwarding_numbersResponses_data_numbers_forward_to_group'
        forward_to_user:
          $ref: '#/components/schemas/forwarding_numbersResponses_data_numbers_forward_to_user'
        forward_to_ext:
          $ref: '#/components/schemas/forwarding_numbersResponses_data_numbers_forward_to_ext'
    forwarding_numbersResponses_data_numbers_forward_to_group:  
      type: object
      format: array
      description: "Массив данных при переадресации на группу; возвращается, если у параметра forward_type указано значение group, массив"
      properties:
        forward_group_id:
          type: integer
          description: "ID сотрудника, на которого осуществляется переадресация"
    forwarding_numbersResponses_data_numbers_forward_to_user:
      type: object
      format: array
      description: "Массив данных при переадресации на сотрудника; возвращается, если у параметра forward_type указано значение user, массив"
      properties:
        forward_user_id:
          type: integer
          description: "ID сотрудника, на которого осуществляется переадресация"
        forward_contact_id:
          type: integer
          description: "ID контакта сотрудника, на который осуществляется переадресация"
        is_default_contact_id:
          type: boolean
          description: "Тип номера сотрудника. Возможные значения6 0- стандатный номер сотрудника, 1 - номер по-умолчанию"
    forwarding_numbersResponses_data_numbers_forward_to_ext:
      type: object
      format: array
      description: "Массив данных при переадресации на внешний номер; возвращается, если у параметра forward_type указано значение ext_forward, массив"
      properties:
        forward_number_type:
          type: boolean
          example: 0
          description: "Тип внешнего номера, на который осуществляется переадресация вызова: 0 - телефон, 1 - SIP-Номер"
        forward_number:
          type: string
          example: "741258"
          description: "Тип «string», внешний номер, на который осуществляется переадресация вызова"
        forward_wait_sec:
          type: integer
          example: 15
          description: "Время ожидания ответа абонента (в секундах) при переадресации на внешний номер"
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
      xml:
        name: address
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
      